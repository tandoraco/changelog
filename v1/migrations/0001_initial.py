# Generated by Django 2.1.5 on 2019-10-02 15:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('password_hash', models.CharField(max_length=100)),
                ('is_locked', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=7)),
                ('deleted', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Changelog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200)),
                ('content', tinymce.models.HTMLField()),
                ('published', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_edited_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='v1.Category')),
            ],
        ),
        migrations.CreateModel(
            name='ClientToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.URLField(unique=True)),
                ('company_name', models.CharField(max_length=100)),
                ('changelog_terminology', models.CharField(default='Changelog', max_length=50)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='company_admin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Embed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('css', models.TextField(blank=True)),
                ('javascript', models.TextField(blank=True)),
                ('color', models.CharField(max_length=7)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='v1.Company')),
            ],
        ),
        migrations.CreateModel(
            name='ForgotPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(db_index=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name=254)),
            ],
        ),
        migrations.CreateModel(
            name='PublicPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=7)),
                ('hide_from_crawlers', models.BooleanField(default=False)),
                ('show_authors', models.BooleanField(default=False)),
                ('private_mode', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='v1.Company')),
            ],
        ),
        migrations.AddField(
            model_name='changelog',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='v1.Company'),
        ),
        migrations.AddField(
            model_name='changelog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='changelog',
            name='last_edited_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='last_edited_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='v1.Company'),
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='v1.Company'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('company', 'name', 'color')},
        ),
    ]
